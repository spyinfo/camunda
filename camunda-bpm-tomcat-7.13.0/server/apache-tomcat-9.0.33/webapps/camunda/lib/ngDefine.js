define("ngParse",[],function(){var a=/^module:([^:]*)(:(.*))?$/,u=/^ng/;return{parseNgModule:function(e,n){var t=[],l=[];return function e(n,o,r){var i;if(n)if("function"==typeof n)for(i in n)"prototype"!=i&&"length"!=i&&"name"!=i&&n.hasOwnProperty(i)&&o.call(r,n[i],i);else if(n.forEach&&n.forEach!==e)n.forEach(o,r);else if(isArrayLike(n))for(i=0;i<n.length;i++)o.call(r,n[i],i);else for(i in n)n.hasOwnProperty(i)&&o.call(r,n[i],i);return n}(n,function(e){var n,o=e.match(a);if(o){var r=o[1],i=o[3];i||(n=r,u.test(n))||(i=r.replace(/\./g,"/")),l.push(r),i&&t.push(i)}else t.push(e)}),{name:e,fileDependencies:t,moduleDependencies:l}}}}),function(s){define("ngDefine",["angular","ngParse"],function(r,d){function f(e){return Array.prototype.slice.call(e,0)}function n(e,n,o){if(!n)throw new Error("wrong number of arguments, expected name[, dependencies], body");!function(e,n,o,r){r||(r=o,o=null);var i,t,l=d.parseNgModule(n,o||[]),a=l.moduleDependencies,u=l.fileDependencies;try{e.module(n),t=!0}catch(e){t=!1}if(a.length&&t)throw new Error("Cannot re-define angular module "+n+" with new dependencies ["+a+"]. Make sure the module is not defined else where or define a sub-module with additional angular module dependencies instead.");a.length||!t?(i=e.module(n,a),c(n,"defined with dependencies",a)):(i=e.module(n),c(n,"looked up")),define(u,function(){var e=f(arguments);return e.unshift(i),r.apply(s,e),c(n,"loaded"),i})}(r,e,n,o)}s.ngDefine||(s.ngDefine=n);var o,c=(Function.prototype.bind&&s.console&&s.console.log&&(o=Function.prototype.bind.call(s.console.log,s.console)),function(){if(n.debug&&o){var e=f(arguments);e.unshift("[ngDefine]"),o.apply(o,e)}});return n})}(window);